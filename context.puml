' context.puml
!function getTitle($title)
    !return $title
!endfunction

' Open the digraph and define the default node shape
!procedure startDfd($title)
digraph dfd2 {
node[shape=record]
rankdir="LR";
label =$title
!endprocedure

' Close the digraph
!procedure endDfd()
}
!endprocedure

' Define External procedure (for external entities)
!procedure External($alias, $label)
    $alias [label="$label", shape=box, fontcolor=black, fontsize=12, color=black, penwidth=2];
!endprocedure

' It automatically wraps the given label in the format: "{<f0> 0|<f1> <label>\n\n\n}"
!procedure Process($alias, $label)
    $alias [label="{<f0> 0|<f1> $label\n\n\n}", shape=Mrecord, pos="0,0!", fontcolor=black, fontsize=12, color=black, penwidth=2];
!endprocedure



' Define the Data Flow macros

!procedure InFlow($alias1, $alias2, $label="")
    !if ($label != "")
        $alias1 -> $alias2 [label="$label", fontcolor=black, fontsize=10, color=black, penwidth=1];
    !else
        $alias1 -> $alias2 [color=black, penwidth=1];
    !endif
!endprocedure

!procedure OutFlow($alias1, $alias2, $label="")
    !if ($label != "")
        $alias2 -> $alias1 [label="$label", dir=back, fontcolor=black, fontsize=10, color=black, penwidth=1];
    !else
        $alias2 -> $alias1 [dir=back, fontcolor=black, fontsize=10, color=black, penwidth=1];
    !endif
!endprocedure

!procedure BiFlow($alias1, $alias2, $label="")
    !if ($label != "")
        $alias1 -> $alias2 [label="$label", dir=both, fontcolor=black, fontsize=10, color=black, penwidth=1];
    !else
        $alias1 -> $alias2 [dir=both, fontcolor=black, fontsize=10, color=black, penwidth=1];
    !endif
!endprocedure
