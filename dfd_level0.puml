' dfd_level0.puml
'------------------------------------------------------
' DFD Level 0 Library: Procedures for Processes, Data Stores,
' External Entities, Subgraph Blocks, and Data Flows
'------------------------------------------------------

' Open the digraph and define the default node shape
!procedure startDfd()
digraph dfd2 {
    node[shape=record]
!endprocedure

' Close the digraph
!procedure endDfd()
}
!endprocedure

' Set a title with an HTML-like label
!procedure Title($title)
    graph [rankdir=LR, ranksep=1.5, splines=true, overlap=false, labeljust=c, labelloc=t, \
    label=<<TABLE BORDER="0" CELLBORDER="0">
    <TR><TD><FONT POINT-SIZE="16">$title</FONT></TD></TR>
    <TR><TD><FONT POINT-SIZE="10">DFD Level 0 Diagram</FONT></TD></TR>
    </TABLE>>];
!endprocedure

' start the processes/data stores cluster
!procedure startElements()
subgraph cluster_level1 {
    label = "Level 0";
!endprocedure

' End the processes/data stores subgraph
!procedure endElements()
}
!endprocedure

'-------------------------------
' Node procedures
'-------------------------------

' Process procedure with step number
' Usage: Process(alias, stepID, name)
!procedure Process($alias, $id, $name)
    $alias [label="{<f0> $id|<f1> $name\n\n\n}", shape=Mrecord];
!endprocedure

' Store procedure for data stores
' Usage: Store(alias, stepID, name)
!procedure Store($alias, $id, $name)
    $alias [label="<f0> $id   |<f1> $name"];
!endprocedure

' External procedure for external entities
' Usage: External(alias, label)
!procedure External($alias, $label)
    $alias [label="$label", shape=box];
!endprocedure

'-------------------------------
' Data Flow macros
'-------------------------------

!procedure InFlow($alias1, $alias2, $label="")
    !if ($label != "")
        $alias1 -> $alias2 [label="$label", fontcolor=black, fontsize=10, color=black, penwidth=1];
    !else
        $alias1 -> $alias2 [color=black, penwidth=1];
    !endif
!endprocedure

!procedure OutFlow($alias1, $alias2, $label="")
    !if ($label != "")
        $alias2 -> $alias1 [label="$label", fontcolor=black, fontsize=10, color=black, penwidth=1];
    !else
        $alias2 -> $alias1 [dir=back, fontcolor=black, fontsize=10, color=black, penwidth=1];
    !endif
!endprocedure

!procedure BiFlow($alias1, $alias2, $label="")
    !if ($label != "")
        $alias1 -> $alias2 [label="$label", fontcolor=black, fontsize=10, color=black, penwidth=1];
    !else
        $alias1 -> $alias2 [dir=both, fontcolor=black, fontsize=10, color=black, penwidth=1];
    !endif
!endprocedure
